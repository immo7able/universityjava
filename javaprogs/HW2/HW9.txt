1) import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;

public class Main {
    public static void main(String[] args) {
        ArrayList<Integer> list = new ArrayList<>();
        list.add(1);
        list.add(3);
        list.add(2);
        list.add(5);
        //list.sort(Comparator.naturalOrder());
        Collections.sort(list);
        for(int i=0;i< list.size();i++){
            System.out.println(list.get(i));
        }
    }
}

2)
import java.util.Stack;

public class Main2 {
    public static void main(String[] args) {
        Stack<Integer> stack = new Stack<>();
        stack.add(1);
        stack.add(4);
        stack.add(2);
        stack.add(3);
        stack.add(5);
        stack.add(8);
        stack.add(6);
        stack.add(7);
        stack.add(0);
        stack.add(9);
        System.out.println(stack.get(2));
        for(int i=0;i<stack.size();i++){
            if(i==2)
                System.out.println(stack.get(i));
        }
    }
}
3)
package HW9_3;

import java.util.ArrayList;

public class Player {
    String name;
    double price;
    int age;
    public Player(String name, double price, int age){
        this.name = name;
        this.price = price;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}
class Main{
    public static void main(String[] args) {
        ArrayList<Player> list = new ArrayList<>();
        list.add(new Player("A", 1000, 16));
        list.add(new Player("B", 2000, 18));
        list.add(new Player("C", 3000, 22));
        list.add(new Player("D", 2500, 23));
        list.add(new Player("E", 1500, 18));
        list.add(new Player("F", 3500, 19));
        list.add(new Player("G", 4000, 24));
        list.add(new Player("H", 2200, 21));
        list.add(new Player("I", 3400, 21));
        list.add(new Player("J", 3200, 23));
        double sum=0;
        double mid = 0;
        for(int i=0;i<list.size();i++){
            mid+=list.get(i).getPrice();
            sum+=list.get(i).getAge();
        }
        mid/=list.size();
        System.out.println("Sum"+sum);
        System.out.println("Mid"+mid);
    }
}
4)
package HW9_3;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class HW9_4 {
    public static void main(String[] args) {
        BankApplication a = new BankApplication("Kaspi");
        BankApplication b = new BankApplication("Halyk");
        BankApplication c = new BankApplication("VTB");
        a.addAccount(new Account(0, "A", "A",1000));
        a.addAccount(new Account(1, "B", "B",2000));
        a.addAccount(new Account(2, "C", "C",1000));
        a.addAccount(new Account(3, "D", "D",3000));
        a.addAccount(new Account(4, "E", "E",3000));
        a.addAccount(new Account(5, "F", "F",4000));
        a.addAccount(new Account(6, "G", "G",2000));
        a.addAccount(new Account(7, "H", "H",1000));
        a.addAccount(new Account(8, "I", "I",5000));
        a.addAccount(new Account(9, "J", "J",3000));
        b.addAccount(new Account(0, "A", "A",5000));
        b.addAccount(new Account(1, "B", "B",3000));
        b.addAccount(new Account(2, "C", "C",1000));
        b.addAccount(new Account(3, "D", "D",1000));
        b.addAccount(new Account(4, "E", "E",4000));
        b.addAccount(new Account(5, "F", "F",2000));
        b.addAccount(new Account(6, "G", "G",2000));
        b.addAccount(new Account(7, "H", "H",4000));
        b.addAccount(new Account(8, "I", "I",6000));
        b.addAccount(new Account(9, "J", "J",4000));
        c.addAccount(new Account(0, "A", "A",7000));
        c.addAccount(new Account(1, "B", "B",4000));
        c.addAccount(new Account(2, "C", "C",2000));
        c.addAccount(new Account(3, "D", "D",1000));
        c.addAccount(new Account(4, "E", "E",5000));
        c.addAccount(new Account(5, "F", "F",6000));
        c.addAccount(new Account(6, "G", "G",4000));
        c.addAccount(new Account(7, "H", "H",3000));
        c.addAccount(new Account(8, "I", "I",4000));
        c.addAccount(new Account(9, "J", "J",2000));
        ArrayList<BankApplication> allBanks = new ArrayList<>();
        allBanks.add(a);
        allBanks.add(b);
        allBanks.add(c);
        Collections.sort(allBanks, new Comparator<BankApplication>() {
            @Override
            public int compare(BankApplication o1, BankApplication o2) {
                if(o1.getAverageBalance()>o2.getAverageBalance())
                    return -1;
                else if(o2.getAverageBalance()>o1.getAverageBalance())
                    return 1;
                else return 0;
            }
        });
        for (int i=0;i<allBanks.size();i++){
            System.out.println(allBanks.get(i).getBankData());
        }
    }
}
class Account{
    int id;
    String name;
    String surname;
    double balance;

    public Account(int id, String name, String surname, double balance) {
        this.id = id;
        this.name = name;
        this.surname = surname;
        this.balance = balance;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }
    public String toString(){
        return "ID:"+this.id+" Name:"+this.name+" Surname:"+this.surname+" Balance:"+this.balance;
    }
}
class BankApplication{
    String name;
    ArrayList<Account> accounts = new ArrayList<>();
    public BankApplication(String name){
        this.name = name;
    }
    public BankApplication(){
    }
    void addAccount(Account a){
        accounts.add(a);
    } // Добавляет новый объект Account
    void removeAccount(int i){
        accounts.remove(i);// Удаляет объект со списка под индексом i
    }
    Account getMaxAccount(){
        int max=0;
        for(int i =0;i<accounts.size();i++){
            if(accounts.get(i).getBalance()>max)
                max=i;
        }
        return accounts.get(max);
    } // Возвращает объект Account у кого самый высокий баланс
    double getAverageBalance(){
        double mid=0;
        for(int i=0;i<accounts.size();i++){
            mid+=accounts.get(i).getBalance();
        }
        return mid/accounts.size();
    } // Возвращает среднее значение баланса пользователей
    double getTotalBalance(){
        double sum=0;
        for(int i=0;i<accounts.size();i++){
            sum+=accounts.get(i).getBalance();
        }
        return sum;
    }; // Возвращает сумму баланса пользователей
    int totalAccounts(){
        int total=0;
        for(int i=0;i<accounts.size();i++){
            total++;
        }
        return total;
    }; // Возвращает количество пользователей
    String getBankData(){
        return "Банк: "+name+" Счетов: "+totalAccounts()+" Баланс: "+getTotalBalance()+" Средний баланс: "+getAverageBalance();
    }; // Возвращает имя банка, количество счетов, сумму баланса и среднее значение баланса
}

