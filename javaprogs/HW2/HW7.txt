1)
package HW7_1;

public class Users {
    String name;
    String surname;
    public Users(){}
    public Users(String name, String surname){
        this.name = name;
        this.surname = surname;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }
}
package HW7_1;

public class UserBeanImp implements UserBean {
    Users[] users;
    public UserBeanImp(Users[] users){
        this.users = users;
    }
    @Override
    public void getAllUsers(){
        for(int i = 0;i<users.length;i++){
            System.out.println("User:"+users[i].name+" "+users[i].surname);
        }
    };
    @Override
    public void getUsersByName(String name){
        for(int i = 0;i<users.length;i++){
            if(users[i].name == name) System.out.println("User:"+users[i].name+" "+users[i].surname);
        }
    };
    @Override
    public void getUsersBySurname(String surname){
        for(int i = 0;i<users.length;i++){
            if(users[i].surname == surname) System.out.println("User:"+users[i].name+" "+users[i].surname);
        }
    };
}
package HW7_1;

public interface UserBean {
    void getAllUsers();
    void getUsersByName(String name);
    void getUsersBySurname(String surname);
}
package HW7_1;

public class Main {
    public static void main(String[] args) {
        Users[] users = {
                new Users("Will", "Smith"),
                new Users("June", "Black"),
                new Users("Jorja", "Smith"),
                new Users("Ken", "Block"),
                new Users("John", "Kick"),
                new Users("Jerry", "Back"),
                new Users("John", "Dock"),
                new Users("Dell", "Chick"),
                new Users("Lol", "Jack"),
                new Users("Min", "Meow")
        };
        UserBeanImp u = new UserBeanImp(users);
        u.getAllUsers();
        u.getUsersByName("John");
        u.getUsersBySurname("Smith");
    }
}
2)
package HW7_2;

public interface Workers {
    String getWorkerData();
    int getSalary();
}
package HW7_2;

public class Staff implements Workers{
    int id;
    String name;
    String surname;
    int salary;
    public Staff(){}
    public Staff(int id, String name, String surname, int salary){
        this.id = id;
        this.name = name;
        this.surname = surname;
        this.salary = salary;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public void setSalary(int salary) {
        this.salary = salary;
    }

    @Override
    public String getWorkerData(){
        return "ID: "+id+" Name: "+name+" Surname: "+surname+" Salary: "+salary;
    }
    @Override
    public int getSalary(){
        return salary;
    }
}
package HW7_2;

public class Programmers implements Workers{
    int id;
    String nickname;
    int salary;
    int bonusSalary;
    double KPIValue;
    public Programmers(){}
    public Programmers(int id, String nickname, int salary, int bonusSalary, double KPIValue){
        this.id = id;
        this.nickname = nickname;
        this.salary = salary;
        this.bonusSalary = bonusSalary;
        this.KPIValue = KPIValue;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getNickname() {
        return nickname;
    }

    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    public int getBonusSalary() {
        return bonusSalary;
    }

    public void setBonusSalary(int bonusSalary) {
        this.bonusSalary = bonusSalary;
    }

    public double getKPIValue() {
        return KPIValue;
    }

    public void setKPIValue(double KPIValue) {
        this.KPIValue = KPIValue;
    }

    public void setSalary(int salary) {
        this.salary = salary;
    }

    @Override
    public String getWorkerData(){
        return "ID: "+id+" Nickname: "+nickname+" Salary: "+salary;
    }
    @Override
    public int getSalary(){
        return (int)(salary+KPIValue*bonusSalary);
    }
}
package HW7_2;

public class HRManagers implements Workers{
    int id;
    String fullName;
    int salary;
    public HRManagers(){}
    public HRManagers(int id, String fullName, int salary){
        this.id = id;
        this.fullName = fullName;
        this.salary = salary;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
    public void setSalary(int salary) {
        this.salary = salary;
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Override
    public String getWorkerData(){
        return "ID: "+id+" Fullname: "+fullName+" Salary: "+salary;
    }
    @Override
    public int getSalary(){
        return salary;
    }
}
package HW7_2;

public class Main {
    public static void main(String[] args) {
        Staff a = new Staff(1, "A","A",100000);
        Staff b = new Staff(2, "B","B",150000);
        Staff c = new Staff(3, "C","C",200000);
        Staff d = new Staff(4, "D","D",250000);
        Staff e = new Staff(5, "E","E",300000);
        HRManagers f = new HRManagers(6, "FF", 100000);
        HRManagers g = new HRManagers(7, "GG", 200000);
        HRManagers h = new HRManagers(8, "HH", 150000);
        HRManagers i = new HRManagers(9, "II", 160000);
        HRManagers j = new HRManagers(10, "JJ", 170000);
        Programmers k = new Programmers(11, "K", 200000, 20000, 0.5);
        Programmers l = new Programmers(12, "L", 300000, 30000, 0.6);
        Programmers m = new Programmers(13, "M", 400000, 20000, 0.7);
        Programmers n = new Programmers(14, "N", 500000, 40000, 0.8);
        Programmers o = new Programmers(15, "O", 400000, 50000, 0.7);
        Workers[] workers = {a,b,c,d,e,f,g,h,i,j,k,l,m,n,o};
        int max = 0;
        for(int p=0;p<workers.length;p++){
            if(workers[p].getSalary()>max)
            max=workers[p].getSalary();
        }
        Workers temp;
        System.out.println("Max="+max);
        for(int r=1;r<workers.length;r++){
            for(int s=1;s<workers.length;s++){
                if(workers[s].getSalary()>workers[s-1].getSalary()){
                    temp = workers[s];
                    workers[s]=workers[s-1];
                    workers[s-1]=temp;
                }
            }
        }
        for(int p=0;p<workers.length;p++){
            System.out.println(workers[p].getWorkerData());
        }
    }
}
